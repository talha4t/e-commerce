// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String?
  email String @unique
  password String
  hashedRT String?
  resetToken  String? 
  role String @default("user")

  orders Order[]
  cart Cart?
}

model Product {
  id Int @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  categoryId  Int
  
  category    Category  @relation(fields: [categoryId], references: [id])
  
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  cartItems  CartItem[]
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int
  totalPrice Float
  status     String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])

  orderItems OrderItem[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?

  products    Product[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int

  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}